--- misc/serf-1.3.8/SConstruct	2015-06-12 11:08:21.880729672 +0200
+++ misc/build/serf-1.3.8/SConstruct	2015-06-12 11:18:54.849083624 +0200
@@ -29,6 +29,11 @@
 # where we save the configuration variables
 SAVED_CONFIG = '.saved_config'
 
+#prepare current platform
+#default_platform=sys.platform
+#force platform
+current_platform='linux2'
+
 # Variable class that does no validation on the input
 def _converter(val):
     """
@@ -58,7 +63,7 @@
   return my_validator
 
 # default directories
-if sys.platform == 'win32':
+if current_platform == 'win32':
   default_incdir='..'
   default_libdir='..'
   default_prefix='Debug'
@@ -114,7 +119,8 @@
                   "(space separated)", None), 
   )
 
-if sys.platform == 'win32':
+
+if current_platform == 'win32':
   opts.AddVariables(
     # By default SCons builds for the host platform on Windows, when using
     # a supported compiler (E.g. VS2010/VS2012). Allow overriding
@@ -185,6 +191,13 @@
 zlib = str(env['ZLIB'])
 gssapi = env.get('GSSAPI', None)
 
+print "===================================================================="
+print "APR= %s " % apr
+print "APU= %s " % apu
+print "ZLIB= %s " % zlib
+print "GSSAPI= %s " % gssapi
+print "===================================================================="
+
 if gssapi and os.path.isdir(gssapi):
   krb5_config = os.path.join(gssapi, 'bin', 'krb5-config')
   if os.path.isfile(krb5_config):
@@ -204,6 +217,10 @@
 libdir = '$LIBDIR'
 incdir = '$PREFIX/include/serf-$MAJOR'
 
+print "thisdir = %s " % thisdir
+print "libdir= %s " % libdir
+print "incdir= %s " % incdir
+
 # This version string is used in the dynamic library name, and for Mac OS X also
 # for the current_version and compatibility_version options in the .dylib
 #
@@ -213,7 +230,7 @@
 env['SHLIBVERSION'] = '%d.%d.%d' % (MAJOR, MINOR, 0)
 
 LIBNAME = 'libserf-%d' % (MAJOR,)
-if sys.platform != 'win32':
+if current_platform != 'win32':
   LIBNAMESTATIC = LIBNAME
 else:
   LIBNAMESTATIC = 'serf-${MAJOR}'
@@ -221,17 +238,17 @@
 env.Append(RPATH=libdir,
            PDB='${TARGET.filebase}.pdb')
 
-if sys.platform == 'darwin':
+if current_platform == 'darwin':
 #  linkflags.append('-Wl,-install_name,@executable_path/%s.dylib' % (LIBNAME,))
   env.Append(LINKFLAGS='-Wl,-install_name,%s/%s.dylib' % (thisdir, LIBNAME,))
 
-if sys.platform != 'win32':
+if current_platform != 'win32':
   ### gcc only. figure out appropriate test / better way to check these
   ### flags, and check for gcc.
   env.Append(CFLAGS='-std=c89')
 
   ### These warnings are not available on Solaris
-  if sys.platform != 'sunos5': 
+  if current_platform != 'sunos5': 
     env.Append(CCFLAGS=['-Wdeclaration-after-statement',
                         '-Wmissing-prototypes',
                         '-Wall'])
@@ -246,7 +263,7 @@
   ### works for Mac OS. probably needs to change
   env.Append(LIBS=['ssl', 'crypto', 'z', ])
 
-  if sys.platform == 'sunos5':
+  if current_platform == 'sunos5':
     env.Append(LIBS='m')
 else:
   # Warning level 4, no unused argument warnings
@@ -265,19 +282,21 @@
 
 # PLAN THE BUILD
 SHARED_SOURCES = []
-if sys.platform == 'win32':
+if current_platform == 'win32':
   env.GenDef(['serf.h','serf_bucket_types.h', 'serf_bucket_util.h'])
   SHARED_SOURCES.append(['serf.def'])
 
 SOURCES = Glob('*.c') + Glob('buckets/*.c') + Glob('auth/*.c')
 
+print "291 platform %s " % current_platform
+
 lib_static = env.StaticLibrary(LIBNAMESTATIC, SOURCES)
 lib_shared = env.SharedLibrary(LIBNAME, SOURCES + SHARED_SOURCES)
 
 if aprstatic:
   env.Append(CPPDEFINES=['APR_DECLARE_STATIC', 'APU_DECLARE_STATIC'])
 
-if sys.platform == 'win32':
+if current_platform == 'win32':
   env.Append(LIBS=['user32.lib', 'advapi32.lib', 'gdi32.lib', 'ws2_32.lib',
                    'crypt32.lib', 'mswsock.lib', 'rpcrt4.lib', 'secur32.lib'])
 
@@ -363,7 +382,7 @@
         return env.MergeFlags(cmd, unique)
     env.ParseConfig('$GSSAPI --libs gssapi', parse_libs)
     env.Append(CPPDEFINES='SERF_HAVE_GSSAPI')
-if sys.platform == 'win32':
+if current_platform == 'win32':
   env.Append(CPPDEFINES=['SERF_HAVE_SSPI'])
 
 # On some systems, the -R values that APR describes never make it into actual
@@ -400,7 +419,7 @@
 install_static = env.Install(libdir, lib_static)
 install_shared = env.InstallVersionedLib(libdir, lib_shared)
 
-if sys.platform == 'darwin':
+if current_platform == 'darwin':
   # Change the shared library install name (id) to its final name and location.
   # Notes:
   # If --install-sandbox=<path> is specified, install_shared_path will point
@@ -430,7 +449,7 @@
 
 TEST_PROGRAMS = [ 'serf_get', 'serf_response', 'serf_request', 'serf_spider',
                   'test_all', 'serf_bwtp' ]
-if sys.platform == 'win32':
+if current_platform == 'win32':
   TEST_EXES = [ os.path.join('test', '%s.exe' % (prog)) for prog in TEST_PROGRAMS ]
 else:
   TEST_EXES = [ os.path.join('test', '%s' % (prog)) for prog in TEST_PROGRAMS ]
